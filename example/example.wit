//////////////////////////////////////////////////////////////////////////////
//
// This file contains examples of a few different types of interfaces.
//
//////////////////////////////////////////////////////////////////////////////

record polarity-scores {
    compound: float64,
    positive: float64,
    negative: float64,
    neutral: float64,
}

type pscores = polarity-scores

sentiment: func(input: string) -> pscores

//////////////////////////////////////////////////////////////////////////////

square: func(input: s32) -> s32

square-with-err: func(input: s32) -> expected<s32, string>

//////////////////////////////////////////////////////////////////////////////

record split-input {
    s: string,
    delimiter: string,
}

record split-output {
    c: string,
}

split: func(input: split-input) -> list<split-output>

//////////////////////////////////////////////////////////////////////////////

record hilbert-input {
    vec: list<u8>,
    min-value: float64,
    max-value: float64,
    scale: float64,
}

hilbert-encode: func(input: hilbert-input) -> string

